#!groovy

properties([
/* Only keep the 30 most recent builds. */
    [$class  : 'BuildDiscarderProperty',
    strategy: [$class: 'LogRotator', numToKeepStr: '30']],
    disableConcurrentBuilds(), 
    parameters([
        booleanParam(name: 'sendReports', defaultValue: true, description: "Send reports"),
        string(defaultValue: "", description: "List of tests to be excluded", name: "excludeTestsList")
    ])
])
    
def sharedLib
def context

node {

    withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', 
                        credentialsId: "jenkins-aws",
                        accessKeyVariable: 'AWS_ACCESS_KEY_ID', 
                        secretKeyVariable: 'AWS_SECRET_ACCESS_KEY']]) {

        try {

            stage("Checkout") {
                deleteDir()
                step([$class: 'WsCleanup'])
                checkout scm
                sharedLib = load "carrier-io/shared.groovy"
                context = sharedLib.getContext()
            }

            /*stage("Populate data to db") {
                if(params.populateDatabase){
                    sharedLib.populateData(params.tenant)
                }    
            }*/

            stage("Configure load generators") {
                sharedLib.createStack(context)
            }    

            stage("Configure resources monitoring") {
                sharedLib.installTelegrafAgent(context)
            }

            stage("Execute tests") {
                sharedLib.executePerformanceTest(context, params.excludeTestsList, params.sendReports)
            }

        } catch (Exception err){
            println err
        } finally { 
            stage('Shut down load generators and FOLIO environment'){
                 // wait until all containers are completed
                sleep 60
                sharedLib.stopAllServices(context)
                sharedLib.stopAllInstances(context)
                sharedLib.deleteStack(context)
            }
        }
    }

}
