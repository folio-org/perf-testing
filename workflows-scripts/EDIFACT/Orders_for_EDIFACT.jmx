<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.0 r1840935">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="orders_for_EDIFACT" enabled="true">
      <stringProp name="TestPlan.comments">This test plan was created by the BlazeMeter converter v.3.1.23. Please contact support@blazemeter.com for further support.</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="hsot12" elementType="Argument">
            <stringProp name="Argument.name">hsot12</stringProp>
            <stringProp name="Argument.value">localhost</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="protocol" elementType="Argument">
            <stringProp name="Argument.name">protocol</stringProp>
            <stringProp name="Argument.value">https</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="port" elementType="Argument">
            <stringProp name="Argument.name">port</stringProp>
            <stringProp name="Argument.value">443</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="X-Okapi-Token-Header" elementType="Argument">
            <stringProp name="Argument.name">X-Okapi-Token-Header</stringProp>
            <stringProp name="Argument.value">eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJmb2xpbyIsInR5cGUiOiJsZWdhY3ktYWNjZXNzIiwidXNlcl9pZCI6IjllYjY3MzAxLTZmNmUtNDY4Zi05YjFhLTYxMzRkYzM5YTY4NCIsImlhdCI6MTY1OTcxMTczNiwidGVuYW50IjoiZnMwOTAwMDAwMCJ9.9nuspgZf-xD9_AX7fR3AsOUqg8YBsHiWrlz1RlRu7bE</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="host3" elementType="Argument">
            <stringProp name="Argument.name">host3</stringProp>
            <stringProp name="Argument.value">thunderjet-okapi.ci.folio.org</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="host44" elementType="Argument">
            <stringProp name="Argument.name">host44</stringProp>
            <stringProp name="Argument.value">folio-snapshot-okapi.dev.folio.org</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="host333" elementType="Argument">
            <stringProp name="Argument.name">host333</stringProp>
            <stringProp name="Argument.value">okapi-bugfest-mg.int.aws.folio.org</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="host22" elementType="Argument">
            <stringProp name="Argument.name">host22</stringProp>
            <stringProp name="Argument.value">bulk-edit-perf-okapi.ci.folio.org</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="host" elementType="Argument">
            <stringProp name="Argument.name">host</stringProp>
            <stringProp name="Argument.value">okapi-ptf-rmb.int.aws.folio.org</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="OrdersCount" elementType="Argument">
            <stringProp name="Argument.name">OrdersCount</stringProp>
            <stringProp name="Argument.value">1000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="OrderDate" elementType="Argument">
            <stringProp name="Argument.name">OrderDate</stringProp>
            <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd,,,,OrderDate)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="OrderTime" elementType="Argument">
            <stringProp name="Argument.name">OrderTime</stringProp>
            <stringProp name="Argument.value">${__timeShift(HH:mm:ss,,,,OrderTime)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="448 - GENERATE COMPOSTIE ORDERS (PTF) Honey1" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${OrdersCount}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable" enabled="true">
          <stringProp name="maximumValue">15</stringProp>
          <stringProp name="minimumValue">1</stringProp>
          <stringProp name="outputFormat"></stringProp>
          <boolProp name="perThread">false</boolProp>
          <stringProp name="randomSeed"></stringProp>
          <stringProp name="variableName">randVal</stringProp>
        </RandomVariableConfig>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">x-okapi-token</stringProp>
              <stringProp name="Header.value">${X-Okapi-Token-Header}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Composite Order" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &#xd;
  &quot;approved&quot; : true,&#xd;
  &quot;approvedById&quot; : &quot;9eb67301-6f6e-468f-9b1a-6134dc39a684&quot;,&#xd;
  &quot;approvalDate&quot; : &quot;${OrderDate}T${OrderTime}.000+00:00&quot;,&#xd;
  &quot;dateOrdered&quot; : &quot;${OrderDate}T${OrderTime}.000+00:00&quot;,&#xd;
  &quot;notes&quot; : [ ],&#xd;
&#xd;
  &quot;orderType&quot; : &quot;One-Time&quot;,&#xd;
  &quot;reEncumber&quot; : true,&#xd;
  &quot;totalEstimatedPrice&quot; : 1.0,&#xd;
  &quot;totalEncumbered&quot; : 0.0,&#xd;
  &quot;totalExpended&quot; : 0.0,&#xd;
  &quot;totalItems&quot; : 1,&#xd;
  &quot;vendor&quot; : &quot;2e6d8468-0620-475b-a092-045e659a0aaa&quot;,&#xd;
  &quot;workflowStatus&quot; : &quot;Open&quot;,&#xd;
  &quot;compositePoLines&quot; : [ {&#xd;
   &#xd;
    &quot;edition&quot; : &quot;&quot;,&#xd;
    &quot;checkinItems&quot; : false,&#xd;
    &quot;instanceId&quot; : &quot;548ff5d0-7bd3-4f7f-a219-ea27e6c15e32&quot;,&#xd;
    &quot;acquisitionMethod&quot; : &quot;df26d81b-9d63-4ff8-bf41-49bf75cfa70e&quot;,&#xd;
    &quot;automaticExport&quot; : true,&#xd;
    &quot;alerts&quot; : [ ],&#xd;
    &quot;claims&quot; : [ ],&#xd;
    &quot;collection&quot; : false,&#xd;
    &quot;contributors&quot; : [ {&#xd;
      &quot;contributor&quot; : &quot;Madariaga, Salvador de, 1886-1978&quot;,&#xd;
      &quot;contributorNameTypeId&quot; : &quot;35b01201-597f-4938-a0d1-110245ba9d67&quot;&#xd;
    } ],&#xd;
    &quot;cost&quot; : {&#xd;
      &quot;listUnitPriceElectronic&quot; : 1.0,&#xd;
      &quot;currency&quot; : &quot;USD&quot;,&#xd;
      &quot;discountType&quot; : &quot;percentage&quot;,&#xd;
      &quot;quantityElectronic&quot; : 1,&#xd;
      &quot;poLineEstimatedPrice&quot; : 1.0&#xd;
    },&#xd;
    &quot;details&quot; : {&#xd;
      &quot;productIds&quot; : [ ]&#xd;
    },&#xd;
    &quot;eresource&quot; : {&#xd;
      &quot;activated&quot; : false,&#xd;
      &quot;createInventory&quot; : &quot;Instance, Holding, Item&quot;,&#xd;
      &quot;trial&quot; : false,&#xd;
      &quot;accessProvider&quot; : &quot;2e6d8468-0620-475b-a092-045e659a0aaa&quot;,&#xd;
      &quot;materialType&quot; : &quot;025ba2c5-5e96-4667-a677-8186463aee69&quot;&#xd;
    },&#xd;
    &quot;fundDistribution&quot; : [ ],&#xd;
    &quot;isPackage&quot; : false,&#xd;
    &quot;locations&quot; : [ {&#xd;
      &quot;holdingId&quot; : &quot;7176260e-7f68-42b1-83bb-6f63537a3823&quot;,&#xd;
      &quot;quantity&quot; : 1,&#xd;
      &quot;quantityElectronic&quot; : 1&#xd;
    } ],&#xd;
   &#xd;
    &quot;orderFormat&quot; : &quot;Electronic Resource&quot;,&#xd;
    &quot;paymentStatus&quot; : &quot;Awaiting Payment&quot;,&#xd;
   &#xd;
    &quot;publicationDate&quot; : &quot;[1945]&quot;,&#xd;
    &quot;publisher&quot; : &quot;Editorial sudamericana&quot;,&#xd;
  &#xd;
    &quot;receiptStatus&quot; : &quot;Awaiting Receipt&quot;,&#xd;
    &quot;reportingCodes&quot; : [ ],&#xd;
    &quot;rush&quot; : false,&#xd;
    &quot;source&quot; : &quot;User&quot;,&#xd;
    &quot;titleOrPackage&quot; : &quot;!Ojo, vencedores!&quot;,&#xd;
    &quot;vendorDetail&quot; : {&#xd;
      &quot;instructions&quot; : &quot;&quot;,&#xd;
      &quot;vendorAccount&quot; : &quot;libraryorders@library.tam&quot;,&#xd;
      &quot;referenceNumbers&quot; : [ ]&#xd;
    }&#xd;
   &#xd;
  } ],&#xd;
  &quot;acqUnitIds&quot; : [ ],&#xd;
  &#xd;
  &quot;needReEncumber&quot; : false&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/orders/composite-orders</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
            <stringProp name="JSONPostProcessor.referenceNames">orderId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="448 - GENERATE COMPOSTIE ORDERS (PTF) Honey2" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${OrdersCount}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable" enabled="true">
          <stringProp name="maximumValue">15</stringProp>
          <stringProp name="minimumValue">1</stringProp>
          <stringProp name="outputFormat"></stringProp>
          <boolProp name="perThread">false</boolProp>
          <stringProp name="randomSeed"></stringProp>
          <stringProp name="variableName">randVal</stringProp>
        </RandomVariableConfig>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">x-okapi-token</stringProp>
              <stringProp name="Header.value">${X-Okapi-Token-Header}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Composite Order" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &#xd;
  &quot;approved&quot; : true,&#xd;
  &quot;approvedById&quot; : &quot;9eb67301-6f6e-468f-9b1a-6134dc39a684&quot;,&#xd;
  &quot;approvalDate&quot; : &quot;${OrderDate}T${OrderTime}.000+00:00&quot;,&#xd;
  &quot;dateOrdered&quot; : &quot;${OrderDate}T${OrderTime}.000+00:00&quot;,&#xd;
  &quot;notes&quot; : [ ],&#xd;
  &#xd;
  &quot;orderType&quot; : &quot;One-Time&quot;,&#xd;
  &quot;reEncumber&quot; : true,&#xd;
  &quot;totalEstimatedPrice&quot; : 1.0,&#xd;
  &quot;totalEncumbered&quot; : 0.0,&#xd;
  &quot;totalExpended&quot; : 0.0,&#xd;
  &quot;totalItems&quot; : 1,&#xd;
  &quot;vendor&quot; : &quot;e02e4507-3c3a-40e5-b2f6-dbb9a15ac950&quot;,&#xd;
  &quot;workflowStatus&quot; : &quot;Open&quot;,&#xd;
  &quot;compositePoLines&quot; : [ {&#xd;
   &#xd;
    &quot;edition&quot; : &quot;&quot;,&#xd;
    &quot;checkinItems&quot; : false,&#xd;
    &quot;instanceId&quot; : &quot;504093b1-f29a-4eb8-bc56-c873b17fd578&quot;,&#xd;
    &quot;acquisitionMethod&quot; : &quot;df26d81b-9d63-4ff8-bf41-49bf75cfa70e&quot;,&#xd;
    &quot;automaticExport&quot; : true,&#xd;
    &quot;alerts&quot; : [ ],&#xd;
    &quot;claims&quot; : [ ],&#xd;
    &quot;collection&quot; : false,&#xd;
    &quot;contributors&quot; : [ {&#xd;
      &quot;contributor&quot; : &quot;Salazar Mallén, Rubén&quot;,&#xd;
      &quot;contributorNameTypeId&quot; : &quot;35b01201-597f-4938-a0d1-110245ba9d67&quot;&#xd;
    } ],&#xd;
    &quot;cost&quot; : {&#xd;
      &quot;listUnitPrice&quot; : 1.0,&#xd;
      &quot;currency&quot; : &quot;USD&quot;,&#xd;
      &quot;discountType&quot; : &quot;percentage&quot;,&#xd;
      &quot;quantityPhysical&quot; : 1,&#xd;
      &quot;poLineEstimatedPrice&quot; : 1.0&#xd;
    },&#xd;
    &quot;details&quot; : {&#xd;
      &quot;productIds&quot; : [ ]&#xd;
    },&#xd;
    &quot;fundDistribution&quot; : [ ],&#xd;
    &quot;isPackage&quot; : false,&#xd;
    &quot;locations&quot; : [ {&#xd;
      &quot;holdingId&quot; : &quot;18a7415f-bc0a-4641-a2c8-586162a3782b&quot;,&#xd;
      &quot;quantity&quot; : 1,&#xd;
      &quot;quantityPhysical&quot; : 1&#xd;
    } ],&#xd;
    &quot;orderFormat&quot; : &quot;Physical Resource&quot;,&#xd;
    &quot;paymentStatus&quot; : &quot;Awaiting Payment&quot;,&#xd;
    &quot;physical&quot; : {&#xd;
      &quot;createInventory&quot; : &quot;Instance, Holding&quot;,&#xd;
      &quot;materialType&quot; : &quot;025ba2c5-5e96-4667-a677-8186463aee69&quot;,&#xd;
      &quot;materialSupplier&quot; : &quot;2e6d8468-0620-475b-a092-045e659a0aaa&quot;,&#xd;
      &quot;volumes&quot; : [ ]&#xd;
    },&#xd;
    &#xd;
    &quot;publicationDate&quot; : &quot;[1968]&quot;,&#xd;
    &quot;publisher&quot; : &quot;B. Costa-Amic&quot;,&#xd;
   &#xd;
    &quot;receiptStatus&quot; : &quot;Awaiting Receipt&quot;,&#xd;
    &quot;reportingCodes&quot; : [ ],&#xd;
    &quot;rush&quot; : false,&#xd;
    &quot;source&quot; : &quot;User&quot;,&#xd;
    &quot;titleOrPackage&quot; : &quot;!Viva México!Novela.&quot;,&#xd;
    &quot;vendorDetail&quot; : {&#xd;
      &quot;instructions&quot; : &quot;&quot;,&#xd;
      &quot;vendorAccount&quot; : &quot;852&quot;,&#xd;
      &quot;referenceNumbers&quot; : [ ]&#xd;
    }&#xd;
    &#xd;
  } ],&#xd;
  &quot;acqUnitIds&quot; : [ ],&#xd;
  &#xd;
  &quot;needReEncumber&quot; : false&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/orders/composite-orders</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
            <stringProp name="JSONPostProcessor.referenceNames">orderId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="448 - GENERATE COMPOSTIE ORDERS (PTF) Honey3" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${OrdersCount}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable" enabled="true">
          <stringProp name="maximumValue">15</stringProp>
          <stringProp name="minimumValue">1</stringProp>
          <stringProp name="outputFormat"></stringProp>
          <boolProp name="perThread">false</boolProp>
          <stringProp name="randomSeed"></stringProp>
          <stringProp name="variableName">randVal</stringProp>
        </RandomVariableConfig>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">x-okapi-token</stringProp>
              <stringProp name="Header.value">${X-Okapi-Token-Header}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Composite Order" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &#xd;
  &quot;approved&quot; : true,&#xd;
  &quot;approvedById&quot; : &quot;9eb67301-6f6e-468f-9b1a-6134dc39a684&quot;,&#xd;
  &quot;approvalDate&quot; : &quot;${OrderDate}T${OrderTime}.000+00:00&quot;,&#xd;
  &quot;dateOrdered&quot; : &quot;${OrderDate}T${OrderTime}.000+00:00&quot;,&#xd;
  &quot;notes&quot; : [ ],&#xd;
  &#xd;
  &quot;orderType&quot; : &quot;Ongoing&quot;,&#xd;
  &quot;reEncumber&quot; : true,&#xd;
  &quot;ongoing&quot; : {&#xd;
    &quot;isSubscription&quot; : false,&#xd;
    &quot;manualRenewal&quot; : false&#xd;
  },&#xd;
  &quot;totalEstimatedPrice&quot; : 1.0,&#xd;
  &quot;totalEncumbered&quot; : 0.0,&#xd;
  &quot;totalExpended&quot; : 0.0,&#xd;
  &quot;totalItems&quot; : 1,&#xd;
  &quot;vendor&quot; : &quot;ede1513a-ea9b-46e5-8f2c-7d93836f9742&quot;,&#xd;
  &quot;workflowStatus&quot; : &quot;Open&quot;,&#xd;
  &quot;compositePoLines&quot; : [ {&#xd;
  &#xd;
    &quot;edition&quot; : &quot;&quot;,&#xd;
    &quot;checkinItems&quot; : false,&#xd;
    &quot;instanceId&quot; : &quot;15704686-c9ad-40d7-8c96-c9321e867e87&quot;,&#xd;
    &quot;acquisitionMethod&quot; : &quot;df26d81b-9d63-4ff8-bf41-49bf75cfa70e&quot;,&#xd;
    &quot;automaticExport&quot; : true,&#xd;
    &quot;alerts&quot; : [ ],&#xd;
    &quot;claims&quot; : [ ],&#xd;
    &quot;collection&quot; : false,&#xd;
    &quot;contributors&quot; : [ ],&#xd;
    &quot;cost&quot; : {&#xd;
      &quot;listUnitPriceElectronic&quot; : 1.0,&#xd;
      &quot;currency&quot; : &quot;USD&quot;,&#xd;
      &quot;discountType&quot; : &quot;percentage&quot;,&#xd;
      &quot;quantityElectronic&quot; : 1,&#xd;
      &quot;poLineEstimatedPrice&quot; : 1.0&#xd;
    },&#xd;
    &quot;details&quot; : {&#xd;
      &quot;productIds&quot; : [ {&#xd;
        &quot;productId&quot; : &quot;9783631634998&quot;,&#xd;
        &quot;productIdType&quot; : &quot;59378436-9645-4add-b05f-6afc69bdc8d0&quot;,&#xd;
        &quot;qualifier&quot; : &quot;(hd.bd.)&quot;&#xd;
      } ]&#xd;
    },&#xd;
    &quot;eresource&quot; : {&#xd;
      &quot;activated&quot; : false,&#xd;
      &quot;createInventory&quot; : &quot;Instance, Holding, Item&quot;,&#xd;
      &quot;trial&quot; : false,&#xd;
      &quot;accessProvider&quot; : &quot;2e6d8468-0620-475b-a092-045e659a0aaa&quot;,&#xd;
      &quot;materialType&quot; : &quot;025ba2c5-5e96-4667-a677-8186463aee69&quot;&#xd;
    },&#xd;
    &quot;fundDistribution&quot; : [ ],&#xd;
    &quot;isPackage&quot; : false,&#xd;
    &quot;locations&quot; : [ {&#xd;
      &quot;holdingId&quot; : &quot;8e5da987-84d1-4228-a965-a348ad4eb10e&quot;,&#xd;
      &quot;quantity&quot; : 1,&#xd;
      &quot;quantityElectronic&quot; : 1&#xd;
    } ],&#xd;
    &quot;orderFormat&quot; : &quot;Electronic Resource&quot;,&#xd;
    &quot;paymentStatus&quot; : &quot;Ongoing&quot;,&#xd;
   &#xd;
    &quot;publicationDate&quot; : &quot;2012&quot;,&#xd;
    &quot;publisher&quot; : &quot;Lang&quot;,&#xd;
   &#xd;
    &quot;receiptStatus&quot; : &quot;Ongoing&quot;,&#xd;
    &quot;reportingCodes&quot; : [ ],&#xd;
    &quot;rush&quot; : false,&#xd;
    &quot;source&quot; : &quot;User&quot;,&#xd;
    &quot;titleOrPackage&quot; : &quot;\&quot; - notwendig und schön zu wissen, auf welchem Boden man geht\&quot; :Arbeitsbuch Uwe Kolbe /Stefan Elit (Hrsg.).&quot;,&#xd;
    &quot;vendorDetail&quot; : {&#xd;
      &quot;instructions&quot; : &quot;&quot;,&#xd;
      &quot;vendorAccount&quot; : &quot;548&quot;,&#xd;
      &quot;referenceNumbers&quot; : [ ]&#xd;
    }&#xd;
   &#xd;
  } ],&#xd;
  &quot;acqUnitIds&quot; : [ ],&#xd;
  &#xd;
  &quot;needReEncumber&quot; : false&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/orders/composite-orders</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
            <stringProp name="JSONPostProcessor.referenceNames">orderId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="448 - GENERATE COMPOSTIE ORDERS (PTF) EqWatch1" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${OrdersCount}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable" enabled="true">
          <stringProp name="maximumValue">15</stringProp>
          <stringProp name="minimumValue">1</stringProp>
          <stringProp name="outputFormat"></stringProp>
          <boolProp name="perThread">false</boolProp>
          <stringProp name="randomSeed"></stringProp>
          <stringProp name="variableName">randVal</stringProp>
        </RandomVariableConfig>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">x-okapi-token</stringProp>
              <stringProp name="Header.value">${X-Okapi-Token-Header}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Composite Order" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &#xd;
  &quot;approved&quot; : true,&#xd;
  &quot;approvedById&quot; : &quot;9eb67301-6f6e-468f-9b1a-6134dc39a684&quot;,&#xd;
  &quot;approvalDate&quot; : &quot;${OrderDate}T${OrderTime}.000+00:00&quot;,&#xd;
  &quot;dateOrdered&quot; : &quot;${OrderDate}T${OrderTime}.000+00:00&quot;,&#xd;
  &quot;notes&quot; : [ ],&#xd;
  &#xd;
  &quot;orderType&quot; : &quot;One-Time&quot;,&#xd;
  &quot;reEncumber&quot; : true,&#xd;
  &quot;totalEstimatedPrice&quot; : 1.0,&#xd;
  &quot;totalEncumbered&quot; : 0.0,&#xd;
  &quot;totalExpended&quot; : 0.0,&#xd;
  &quot;totalItems&quot; : 1,&#xd;
  &quot;vendor&quot; : &quot;1a36d83e-526f-48ad-9956-4e341a40fbbb&quot;,&#xd;
  &quot;workflowStatus&quot; : &quot;Open&quot;,&#xd;
  &quot;compositePoLines&quot; : [ {&#xd;
  &#xd;
    &quot;edition&quot; : &quot;&quot;,&#xd;
    &quot;checkinItems&quot; : false,&#xd;
    &quot;instanceId&quot; : &quot;5c39c8ce-e3cf-4d40-a752-a2e20d666e53&quot;,&#xd;
    &quot;acquisitionMethod&quot; : &quot;df26d81b-9d63-4ff8-bf41-49bf75cfa70e&quot;,&#xd;
    &quot;automaticExport&quot; : true,&#xd;
    &quot;alerts&quot; : [ ],&#xd;
    &quot;claims&quot; : [ ],&#xd;
    &quot;collection&quot; : false,&#xd;
    &quot;contributors&quot; : [ {&#xd;
      &quot;contributor&quot; : &quot;Jernegan, Prescott Ford, 1866-&quot;,&#xd;
      &quot;contributorNameTypeId&quot; : &quot;35b01201-597f-4938-a0d1-110245ba9d67&quot;&#xd;
    } ],&#xd;
    &quot;cost&quot; : {&#xd;
      &quot;listUnitPriceElectronic&quot; : 1.0,&#xd;
      &quot;currency&quot; : &quot;USD&quot;,&#xd;
      &quot;discountType&quot; : &quot;percentage&quot;,&#xd;
      &quot;quantityElectronic&quot; : 1,&#xd;
      &quot;poLineEstimatedPrice&quot; : 1.0&#xd;
    },&#xd;
    &quot;details&quot; : {&#xd;
      &quot;productIds&quot; : [ ]&#xd;
    },&#xd;
    &quot;eresource&quot; : {&#xd;
      &quot;activated&quot; : false,&#xd;
      &quot;createInventory&quot; : &quot;Instance, Holding, Item&quot;,&#xd;
      &quot;trial&quot; : false,&#xd;
      &quot;accessProvider&quot; : &quot;1a36d83e-526f-48ad-9956-4e341a40fbbb&quot;,&#xd;
      &quot;materialType&quot; : &quot;025ba2c5-5e96-4667-a677-8186463aee69&quot;&#xd;
    },&#xd;
    &quot;fundDistribution&quot; : [ ],&#xd;
    &quot;isPackage&quot; : false,&#xd;
    &quot;locations&quot; : [ {&#xd;
      &quot;holdingId&quot; : &quot;1b500987-7210-4c18-8b39-85cf39e548be&quot;,&#xd;
      &quot;quantity&quot; : 1,&#xd;
      &quot;quantityElectronic&quot; : 1&#xd;
    } ],&#xd;
    &quot;orderFormat&quot; : &quot;Electronic Resource&quot;,&#xd;
    &quot;paymentStatus&quot; : &quot;Awaiting Payment&quot;,&#xd;
   &#xd;
    &quot;publicationDate&quot; : &quot;1908&quot;,&#xd;
    &quot;publisher&quot; : &quot;\&quot;Philippine education,\&quot;&quot;,&#xd;
   &#xd;
    &quot;receiptStatus&quot; : &quot;Awaiting Receipt&quot;,&#xd;
    &quot;reportingCodes&quot; : [ ],&#xd;
    &quot;rush&quot; : false,&#xd;
    &quot;source&quot; : &quot;User&quot;,&#xd;
    &quot;titleOrPackage&quot; : &quot;\&quot;1001\&quot; questions and answers on Philippine history and civil government (2d ed., rev. to Feb. 1, 1908) ...by Prescott F. Jernegan ...&quot;,&#xd;
    &quot;vendorDetail&quot; : {&#xd;
      &quot;instructions&quot; : &quot;&quot;,&#xd;
      &quot;vendorAccount&quot; : &quot;144295-1&quot;,&#xd;
      &quot;referenceNumbers&quot; : [ ]&#xd;
    }&#xd;
   &#xd;
  } ],&#xd;
  &quot;acqUnitIds&quot; : [ ],&#xd;
 &#xd;
  &quot;needReEncumber&quot; : false&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/orders/composite-orders</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
            <stringProp name="JSONPostProcessor.referenceNames">orderId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="448 - GENERATE COMPOSTIE ORDERS (PTF) EqWatch2" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${OrdersCount}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable" enabled="true">
          <stringProp name="maximumValue">15</stringProp>
          <stringProp name="minimumValue">1</stringProp>
          <stringProp name="outputFormat"></stringProp>
          <boolProp name="perThread">false</boolProp>
          <stringProp name="randomSeed"></stringProp>
          <stringProp name="variableName">randVal</stringProp>
        </RandomVariableConfig>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">x-okapi-token</stringProp>
              <stringProp name="Header.value">${X-Okapi-Token-Header}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Composite Order" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
 &#xd;
  &quot;approved&quot; : true,&#xd;
  &quot;approvedById&quot; : &quot;9eb67301-6f6e-468f-9b1a-6134dc39a684&quot;,&#xd;
  &quot;approvalDate&quot; : &quot;${OrderDate}T${OrderTime}.000+00:00&quot;,&#xd;
  &quot;dateOrdered&quot; : &quot;${OrderDate}T${OrderTime}.000+00:00&quot;,&#xd;
  &quot;notes&quot; : [ ],&#xd;
 &#xd;
  &quot;orderType&quot; : &quot;Ongoing&quot;,&#xd;
  &quot;reEncumber&quot; : true,&#xd;
  &quot;ongoing&quot; : {&#xd;
    &quot;isSubscription&quot; : false,&#xd;
    &quot;manualRenewal&quot; : false&#xd;
  },&#xd;
  &quot;totalEstimatedPrice&quot; : 1.0,&#xd;
  &quot;totalEncumbered&quot; : 0.0,&#xd;
  &quot;totalExpended&quot; : 0.0,&#xd;
  &quot;totalItems&quot; : 1,&#xd;
  &quot;vendor&quot; : &quot;6d363fea-c0e3-4c32-8074-4124b0a2307e&quot;,&#xd;
  &quot;workflowStatus&quot; : &quot;Open&quot;,&#xd;
  &quot;compositePoLines&quot; : [ {&#xd;
  &#xd;
    &quot;edition&quot; : &quot;&quot;,&#xd;
    &quot;checkinItems&quot; : false,&#xd;
    &quot;instanceId&quot; : &quot;15704686-c9ad-40d7-8c96-c9321e867e87&quot;,&#xd;
    &quot;acquisitionMethod&quot; : &quot;df26d81b-9d63-4ff8-bf41-49bf75cfa70e&quot;,&#xd;
    &quot;automaticExport&quot; : true,&#xd;
    &quot;alerts&quot; : [ ],&#xd;
    &quot;claims&quot; : [ ],&#xd;
    &quot;collection&quot; : false,&#xd;
    &quot;contributors&quot; : [ ],&#xd;
    &quot;cost&quot; : {&#xd;
      &quot;listUnitPrice&quot; : 1.0,&#xd;
      &quot;currency&quot; : &quot;USD&quot;,&#xd;
      &quot;discountType&quot; : &quot;percentage&quot;,&#xd;
      &quot;quantityPhysical&quot; : 1,&#xd;
      &quot;poLineEstimatedPrice&quot; : 1.0&#xd;
    },&#xd;
    &quot;details&quot; : {&#xd;
      &quot;productIds&quot; : [ {&#xd;
        &quot;productId&quot; : &quot;9783631634998&quot;,&#xd;
        &quot;productIdType&quot; : &quot;59378436-9645-4add-b05f-6afc69bdc8d0&quot;,&#xd;
        &quot;qualifier&quot; : &quot;(hd.bd.)&quot;&#xd;
      } ]&#xd;
    },&#xd;
    &quot;fundDistribution&quot; : [ ],&#xd;
    &quot;isPackage&quot; : false,&#xd;
    &quot;locations&quot; : [ {&#xd;
      &quot;holdingId&quot; : &quot;8e5da987-84d1-4228-a965-a348ad4eb10e&quot;,&#xd;
      &quot;quantity&quot; : 1,&#xd;
      &quot;quantityPhysical&quot; : 1&#xd;
    } ],&#xd;
    &quot;orderFormat&quot; : &quot;Physical Resource&quot;,&#xd;
    &quot;paymentStatus&quot; : &quot;Ongoing&quot;,&#xd;
    &quot;physical&quot; : {&#xd;
      &quot;createInventory&quot; : &quot;Instance, Holding&quot;,&#xd;
      &quot;materialType&quot; : &quot;025ba2c5-5e96-4667-a677-8186463aee69&quot;,&#xd;
      &quot;materialSupplier&quot; : &quot;1a36d83e-526f-48ad-9956-4e341a40fbbb&quot;,&#xd;
      &quot;volumes&quot; : [ ]&#xd;
    },&#xd;
  &#xd;
    &quot;publicationDate&quot; : &quot;2012&quot;,&#xd;
    &quot;publisher&quot; : &quot;Lang&quot;,&#xd;
   &#xd;
    &quot;receiptStatus&quot; : &quot;Ongoing&quot;,&#xd;
    &quot;reportingCodes&quot; : [ ],&#xd;
    &quot;rush&quot; : false,&#xd;
    &quot;source&quot; : &quot;User&quot;,&#xd;
    &quot;titleOrPackage&quot; : &quot;\&quot; - notwendig und schön zu wissen, auf welchem Boden man geht\&quot; :Arbeitsbuch Uwe Kolbe /Stefan Elit (Hrsg.).&quot;,&#xd;
    &quot;vendorDetail&quot; : {&#xd;
      &quot;instructions&quot; : &quot;&quot;,&#xd;
      &quot;vendorAccount&quot; : &quot;144295-2&quot;,&#xd;
      &quot;referenceNumbers&quot; : [ ]&#xd;
    }&#xd;
   &#xd;
  } ],&#xd;
  &quot;acqUnitIds&quot; : [ ],&#xd;
  &#xd;
  &quot;needReEncumber&quot; : false&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/orders/composite-orders</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
            <stringProp name="JSONPostProcessor.referenceNames">orderId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="448 - GENERATE COMPOSTIE ORDERS (PTF) EqWatch3" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${OrdersCount}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable" enabled="true">
          <stringProp name="maximumValue">15</stringProp>
          <stringProp name="minimumValue">1</stringProp>
          <stringProp name="outputFormat"></stringProp>
          <boolProp name="perThread">false</boolProp>
          <stringProp name="randomSeed"></stringProp>
          <stringProp name="variableName">randVal</stringProp>
        </RandomVariableConfig>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">x-okapi-token</stringProp>
              <stringProp name="Header.value">${X-Okapi-Token-Header}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Composite Order" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &#xd;
  &quot;approved&quot; : true,&#xd;
  &quot;approvedById&quot; : &quot;9eb67301-6f6e-468f-9b1a-6134dc39a684&quot;,&#xd;
  &quot;approvalDate&quot; : &quot;${OrderDate}T${OrderTime}.000+00:00&quot;,&#xd;
  &quot;dateOrdered&quot; : &quot;${OrderDate}T${OrderTime}.000+00:00&quot;,&#xd;
  &quot;notes&quot; : [ ],&#xd;
  &#xd;
  &quot;orderType&quot; : &quot;One-Time&quot;,&#xd;
  &quot;reEncumber&quot; : true,&#xd;
  &quot;totalEstimatedPrice&quot; : 1.0,&#xd;
  &quot;totalEncumbered&quot; : 0.0,&#xd;
  &quot;totalExpended&quot; : 0.0,&#xd;
  &quot;totalItems&quot; : 1,&#xd;
  &quot;vendor&quot; : &quot;382831f9-c680-4b7e-a3ab-daa3022fa4cb&quot;,&#xd;
  &quot;workflowStatus&quot; : &quot;Open&quot;,&#xd;
  &quot;compositePoLines&quot; : [ {&#xd;
   &#xd;
    &quot;edition&quot; : &quot;&quot;,&#xd;
    &quot;checkinItems&quot; : false,&#xd;
    &quot;instanceId&quot; : &quot;4b7e4d4d-a93b-4531-8d14-1e87c35ff0b2&quot;,&#xd;
    &quot;acquisitionMethod&quot; : &quot;df26d81b-9d63-4ff8-bf41-49bf75cfa70e&quot;,&#xd;
    &quot;automaticExport&quot; : true,&#xd;
    &quot;alerts&quot; : [ ],&#xd;
    &quot;claims&quot; : [ ],&#xd;
    &quot;collection&quot; : false,&#xd;
    &quot;contributors&quot; : [ {&#xd;
      &quot;contributor&quot; : &quot;Klein, Hans-Günter, 1939-&quot;,&#xd;
      &quot;contributorNameTypeId&quot; : &quot;35b01201-597f-4938-a0d1-110245ba9d67&quot;&#xd;
    } ],&#xd;
    &quot;cost&quot; : {&#xd;
      &quot;listUnitPrice&quot; : 1.0,&#xd;
      &quot;currency&quot; : &quot;USD&quot;,&#xd;
      &quot;discountType&quot; : &quot;percentage&quot;,&#xd;
      &quot;quantityPhysical&quot; : 1,&#xd;
      &quot;poLineEstimatedPrice&quot; : 1.0&#xd;
    },&#xd;
    &quot;details&quot; : {&#xd;
      &quot;productIds&quot; : [ {&#xd;
        &quot;productId&quot; : &quot;9783928770668&quot;,&#xd;
        &quot;productIdType&quot; : &quot;59378436-9645-4add-b05f-6afc69bdc8d0&quot;,&#xd;
        &quot;qualifier&quot; : &quot;(pbk.)&quot;&#xd;
      } ]&#xd;
    },&#xd;
    &quot;fundDistribution&quot; : [ ],&#xd;
    &quot;isPackage&quot; : false,&#xd;
    &quot;locations&quot; : [ {&#xd;
      &quot;holdingId&quot; : &quot;955477b8-f526-4061-970c-3b4f71502a49&quot;,&#xd;
      &quot;quantity&quot; : 1,&#xd;
      &quot;quantityPhysical&quot; : 1&#xd;
    } ],&#xd;
    &quot;orderFormat&quot; : &quot;Physical Resource&quot;,&#xd;
    &quot;paymentStatus&quot; : &quot;Awaiting Payment&quot;,&#xd;
    &quot;physical&quot; : {&#xd;
      &quot;createInventory&quot; : &quot;Instance, Holding&quot;,&#xd;
      &quot;materialType&quot; : &quot;025ba2c5-5e96-4667-a677-8186463aee69&quot;,&#xd;
      &quot;materialSupplier&quot; : &quot;1a36d83e-526f-48ad-9956-4e341a40fbbb&quot;,&#xd;
      &quot;volumes&quot; : [ ]&#xd;
    },&#xd;
   &#xd;
    &quot;publicationDate&quot; : &quot;1997&quot;,&#xd;
    &quot;publisher&quot; : &quot;Von Bockel&quot;,&#xd;
 &#xd;
    &quot;receiptStatus&quot; : &quot;Awaiting Receipt&quot;,&#xd;
    &quot;reportingCodes&quot; : [ ],&#xd;
    &quot;rush&quot; : false,&#xd;
    &quot;source&quot; : &quot;User&quot;,&#xd;
    &quot;titleOrPackage&quot; : &quot;\&quot;-- es wird der Tod zum Dichter :die Referate des Kolloquiums zur Oper Der Kaiser von Atlantis von Viktor Ullmann in Berlin am 4./5. November 1995 /herausgegeben von Hans-Günter Klein.&quot;,&#xd;
    &quot;vendorDetail&quot; : {&#xd;
      &quot;instructions&quot; : &quot;&quot;,&#xd;
      &quot;vendorAccount&quot; : &quot;300693&quot;,&#xd;
      &quot;referenceNumbers&quot; : [ ]&#xd;
    }&#xd;
   &#xd;
  } ],&#xd;
  &quot;acqUnitIds&quot; : [ ],&#xd;
  &#xd;
  &quot;needReEncumber&quot; : false&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/orders/composite-orders</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
            <stringProp name="JSONPostProcessor.referenceNames">orderId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="448 - GENERATE COMPOSTIE ORDERS (PTF) AmWater1" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${OrdersCount}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable" enabled="true">
          <stringProp name="maximumValue">15</stringProp>
          <stringProp name="minimumValue">1</stringProp>
          <stringProp name="outputFormat"></stringProp>
          <boolProp name="perThread">false</boolProp>
          <stringProp name="randomSeed"></stringProp>
          <stringProp name="variableName">randVal</stringProp>
        </RandomVariableConfig>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">x-okapi-token</stringProp>
              <stringProp name="Header.value">${X-Okapi-Token-Header}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Composite Order" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &#xd;
  &quot;approved&quot; : true,&#xd;
  &quot;approvedById&quot; : &quot;9eb67301-6f6e-468f-9b1a-6134dc39a684&quot;,&#xd;
  &quot;approvalDate&quot; : &quot;${OrderDate}T${OrderTime}.000+00:00&quot;,&#xd;
  &quot;dateOrdered&quot; : &quot;${OrderDate}T${OrderTime}.000+00:00&quot;,&#xd;
  &quot;notes&quot; : [ ],&#xd;
 &#xd;
  &quot;orderType&quot; : &quot;One-Time&quot;,&#xd;
  &quot;reEncumber&quot; : true,&#xd;
  &quot;totalEstimatedPrice&quot; : 1.0,&#xd;
  &quot;totalEncumbered&quot; : 0.0,&#xd;
  &quot;totalExpended&quot; : 0.0,&#xd;
  &quot;totalItems&quot; : 1,&#xd;
  &quot;vendor&quot; : &quot;da29ee41-727a-4372-9472-7818c948f8c7&quot;,&#xd;
  &quot;workflowStatus&quot; : &quot;Open&quot;,&#xd;
  &quot;compositePoLines&quot; : [ {&#xd;
   &#xd;
    &quot;edition&quot; : &quot;&quot;,&#xd;
    &quot;checkinItems&quot; : false,&#xd;
    &quot;instanceId&quot; : &quot;984ba2d1-2842-4305-8116-38dce8e861f1&quot;,&#xd;
    &quot;acquisitionMethod&quot; : &quot;df26d81b-9d63-4ff8-bf41-49bf75cfa70e&quot;,&#xd;
    &quot;automaticExport&quot; : true,&#xd;
    &quot;alerts&quot; : [ ],&#xd;
    &quot;claims&quot; : [ ],&#xd;
    &quot;collection&quot; : false,&#xd;
    &quot;contributors&quot; : [ {&#xd;
      &quot;contributor&quot; : &quot;Kaffanke, Jakobus.&quot;,&#xd;
      &quot;contributorNameTypeId&quot; : &quot;35b01201-597f-4938-a0d1-110245ba9d67&quot;&#xd;
    } ],&#xd;
    &quot;cost&quot; : {&#xd;
      &quot;listUnitPriceElectronic&quot; : 1.0,&#xd;
      &quot;currency&quot; : &quot;USD&quot;,&#xd;
      &quot;discountType&quot; : &quot;percentage&quot;,&#xd;
      &quot;quantityElectronic&quot; : 1,&#xd;
      &quot;poLineEstimatedPrice&quot; : 1.0&#xd;
    },&#xd;
    &quot;details&quot; : {&#xd;
      &quot;productIds&quot; : [ {&#xd;
        &quot;productId&quot; : &quot;9783643137104&quot;,&#xd;
        &quot;productIdType&quot; : &quot;59378436-9645-4add-b05f-6afc69bdc8d0&quot;,&#xd;
        &quot;qualifier&quot; : &quot;&quot;&#xd;
      } ]&#xd;
    },&#xd;
    &quot;eresource&quot; : {&#xd;
      &quot;activated&quot; : false,&#xd;
      &quot;createInventory&quot; : &quot;Instance, Holding, Item&quot;,&#xd;
      &quot;trial&quot; : false,&#xd;
      &quot;accessProvider&quot; : &quot;da29ee41-727a-4372-9472-7818c948f8c7&quot;,&#xd;
      &quot;materialType&quot; : &quot;025ba2c5-5e96-4667-a677-8186463aee69&quot;&#xd;
    },&#xd;
    &quot;fundDistribution&quot; : [ ],&#xd;
    &quot;isPackage&quot; : false,&#xd;
    &quot;locations&quot; : [ {&#xd;
      &quot;holdingId&quot; : &quot;e4eb4065-ac95-4c81-b5cb-f631d98f392d&quot;,&#xd;
      &quot;quantity&quot; : 1,&#xd;
      &quot;quantityElectronic&quot; : 1&#xd;
    } ],&#xd;
    &quot;orderFormat&quot; : &quot;Electronic Resource&quot;,&#xd;
    &quot;paymentStatus&quot; : &quot;Awaiting Payment&quot;,&#xd;
   &#xd;
    &quot;publicationDate&quot; : &quot;[2017], ©2017&quot;,&#xd;
    &quot;publisher&quot; : &quot;Lit&quot;,&#xd;
  &#xd;
    &quot;receiptStatus&quot; : &quot;Awaiting Receipt&quot;,&#xd;
    &quot;reportingCodes&quot; : [ ],&#xd;
    &quot;rush&quot; : false,&#xd;
    &quot;source&quot; : &quot;User&quot;,&#xd;
    &quot;titleOrPackage&quot; : &quot;\&quot; ... der war von Geburt ein Schwabe!\&quot; :Vorträge zum 650. Todesjahr des seligen Heinrich Seuse/Suso /Jakobus Kaffanke (Hg.).&quot;,&#xd;
    &quot;vendorDetail&quot; : {&#xd;
      &quot;instructions&quot; : &quot;&quot;,&#xd;
      &quot;vendorAccount&quot; : &quot;libraryorders@library.tam&quot;,&#xd;
      &quot;referenceNumbers&quot; : [ ]&#xd;
    }&#xd;
   &#xd;
  } ],&#xd;
  &quot;acqUnitIds&quot; : [ ],&#xd;
 &#xd;
  &quot;needReEncumber&quot; : false&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/orders/composite-orders</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
            <stringProp name="JSONPostProcessor.referenceNames">orderId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="448 - GENERATE COMPOSTIE ORDERS (PTF) AmWater2" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${OrdersCount}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable" enabled="true">
          <stringProp name="maximumValue">15</stringProp>
          <stringProp name="minimumValue">1</stringProp>
          <stringProp name="outputFormat"></stringProp>
          <boolProp name="perThread">false</boolProp>
          <stringProp name="randomSeed"></stringProp>
          <stringProp name="variableName">randVal</stringProp>
        </RandomVariableConfig>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">x-okapi-token</stringProp>
              <stringProp name="Header.value">${X-Okapi-Token-Header}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Composite Order" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
 &#xd;
  &quot;approved&quot; : true,&#xd;
  &quot;approvedById&quot; : &quot;9eb67301-6f6e-468f-9b1a-6134dc39a684&quot;,&#xd;
  &quot;approvalDate&quot; : &quot;${OrderDate}T${OrderTime}.000+00:00&quot;,&#xd;
  &quot;dateOrdered&quot; : &quot;${OrderDate}T${OrderTime}.000+00:00&quot;,&#xd;
  &quot;notes&quot; : [ ],&#xd;
  &#xd;
  &quot;orderType&quot; : &quot;Ongoing&quot;,&#xd;
  &quot;reEncumber&quot; : true,&#xd;
  &quot;ongoing&quot; : {&#xd;
    &quot;isSubscription&quot; : false,&#xd;
    &quot;manualRenewal&quot; : false&#xd;
  },&#xd;
  &quot;totalEstimatedPrice&quot; : 1.0,&#xd;
  &quot;totalEncumbered&quot; : 0.0,&#xd;
  &quot;totalExpended&quot; : 0.0,&#xd;
  &quot;totalItems&quot; : 1,&#xd;
  &quot;vendor&quot; : &quot;02c0820c-108c-41c4-ab9c-d289877e8dfa&quot;,&#xd;
  &quot;workflowStatus&quot; : &quot;Open&quot;,&#xd;
  &quot;compositePoLines&quot; : [ {&#xd;
   &#xd;
    &quot;edition&quot; : &quot;&quot;,&#xd;
    &quot;checkinItems&quot; : false,&#xd;
    &quot;instanceId&quot; : &quot;a89f90e1-40d2-4a13-85dd-f79189f5c96a&quot;,&#xd;
    &quot;acquisitionMethod&quot; : &quot;df26d81b-9d63-4ff8-bf41-49bf75cfa70e&quot;,&#xd;
    &quot;automaticExport&quot; : true,&#xd;
    &quot;alerts&quot; : [ ],&#xd;
    &quot;claims&quot; : [ ],&#xd;
    &quot;collection&quot; : false,&#xd;
    &quot;contributors&quot; : [ {&#xd;
      &quot;contributor&quot; : &quot;Elsner, Tobias von, 1952-&quot;,&#xd;
      &quot;contributorNameTypeId&quot; : &quot;35b01201-597f-4938-a0d1-110245ba9d67&quot;&#xd;
    }, {&#xd;
      &quot;contributor&quot; : &quot;Kunstmuseum Kloster Unser Lieben Frauen.&quot;,&#xd;
      &quot;contributorNameTypeId&quot; : &quot;2b4007a7-2d96-4262-a360-c9f760e355c3&quot;&#xd;
    } ],&#xd;
    &quot;cost&quot; : {&#xd;
      &quot;listUnitPriceElectronic&quot; : 1.0,&#xd;
      &quot;currency&quot; : &quot;USD&quot;,&#xd;
      &quot;discountType&quot; : &quot;percentage&quot;,&#xd;
      &quot;quantityElectronic&quot; : 1,&#xd;
      &quot;poLineEstimatedPrice&quot; : 1.0&#xd;
    },&#xd;
    &quot;details&quot; : {&#xd;
      &quot;productIds&quot; : [ {&#xd;
        &quot;productId&quot; : &quot;9783932776625&quot;,&#xd;
        &quot;productIdType&quot; : &quot;59378436-9645-4add-b05f-6afc69bdc8d0&quot;,&#xd;
        &quot;qualifier&quot; : &quot;&quot;&#xd;
      } ]&#xd;
    },&#xd;
    &quot;eresource&quot; : {&#xd;
      &quot;activated&quot; : false,&#xd;
      &quot;createInventory&quot; : &quot;Instance, Holding, Item&quot;,&#xd;
      &quot;trial&quot; : false,&#xd;
      &quot;accessProvider&quot; : &quot;da29ee41-727a-4372-9472-7818c948f8c7&quot;,&#xd;
      &quot;materialType&quot; : &quot;025ba2c5-5e96-4667-a677-8186463aee69&quot;&#xd;
    },&#xd;
    &quot;fundDistribution&quot; : [ ],&#xd;
    &quot;isPackage&quot; : false,&#xd;
    &quot;locations&quot; : [ {&#xd;
      &quot;holdingId&quot; : &quot;8d179553-715a-4d66-ab00-d888f7e158fc&quot;,&#xd;
      &quot;quantity&quot; : 1,&#xd;
      &quot;quantityElectronic&quot; : 1&#xd;
    } ],&#xd;
    &quot;orderFormat&quot; : &quot;Electronic Resource&quot;,&#xd;
    &quot;paymentStatus&quot; : &quot;Ongoing&quot;,&#xd;
   &#xd;
    &quot;publicationDate&quot; : &quot;c1998&quot;,&#xd;
    &quot;publisher&quot; : &quot;mdv, Mitteldeutscher Verlag&quot;,&#xd;
  &#xd;
    &quot;receiptStatus&quot; : &quot;Ongoing&quot;,&#xd;
    &quot;reportingCodes&quot; : [ ],&#xd;
    &quot;rush&quot; : false,&#xd;
    &quot;source&quot; : &quot;User&quot;,&#xd;
    &quot;titleOrPackage&quot; : &quot;\&quot;--gantz verheeret!\&quot; :Magdeburg und der Dreissigjährige Krieg : Beiträge zur Stadtgeschichte und Katalog zur Ausstellung des Kulturhistorischen Museums Magdeburg im Kunstmuseum Kloster Unser Lieben Frauen, 2. Oktober 1998 bis 31. Januar 1999 /[Redaktion, Tobias von Elsner].&quot;,&#xd;
    &quot;vendorDetail&quot; : {&#xd;
      &quot;instructions&quot; : &quot;&quot;,&#xd;
      &quot;vendorAccount&quot; : &quot;123&quot;,&#xd;
      &quot;referenceNumbers&quot; : [ ]&#xd;
    }&#xd;
   &#xd;
  } ],&#xd;
  &quot;acqUnitIds&quot; : [ ],&#xd;
  &#xd;
  &quot;needReEncumber&quot; : false&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/orders/composite-orders</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
            <stringProp name="JSONPostProcessor.referenceNames">orderId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="448 - GENERATE COMPOSTIE ORDERS (PTF) AmWater3" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${OrdersCount}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable" enabled="true">
          <stringProp name="maximumValue">15</stringProp>
          <stringProp name="minimumValue">1</stringProp>
          <stringProp name="outputFormat"></stringProp>
          <boolProp name="perThread">false</boolProp>
          <stringProp name="randomSeed"></stringProp>
          <stringProp name="variableName">randVal</stringProp>
        </RandomVariableConfig>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">x-okapi-token</stringProp>
              <stringProp name="Header.value">${X-Okapi-Token-Header}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Composite Order" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
 &#xd;
  &quot;approved&quot; : true,&#xd;
  &quot;approvedById&quot; : &quot;9eb67301-6f6e-468f-9b1a-6134dc39a684&quot;,&#xd;
  &quot;approvalDate&quot; : &quot;${OrderDate}T${OrderTime}.000+00:00&quot;,&#xd;
  &quot;dateOrdered&quot; : &quot;${OrderDate}T${OrderTime}.000+00:00&quot;,&#xd;
  &quot;notes&quot; : [ ],&#xd;
 &#xd;
  &quot;orderType&quot; : &quot;One-Time&quot;,&#xd;
  &quot;reEncumber&quot; : true,&#xd;
  &quot;totalEstimatedPrice&quot; : 1.0,&#xd;
  &quot;totalEncumbered&quot; : 0.0,&#xd;
  &quot;totalExpended&quot; : 0.0,&#xd;
  &quot;totalItems&quot; : 1,&#xd;
  &quot;vendor&quot; : &quot;2d6f2d47-9664-4794-8cd5-4e168bd57384&quot;,&#xd;
  &quot;workflowStatus&quot; : &quot;Open&quot;,&#xd;
  &quot;compositePoLines&quot; : [ {&#xd;
  &#xd;
    &quot;edition&quot; : &quot;&quot;,&#xd;
    &quot;checkinItems&quot; : false,&#xd;
    &quot;instanceId&quot; : &quot;13ef7951-70d0-4cc9-b80e-bb5e642d3144&quot;,&#xd;
    &quot;acquisitionMethod&quot; : &quot;df26d81b-9d63-4ff8-bf41-49bf75cfa70e&quot;,&#xd;
    &quot;automaticExport&quot; : true,&#xd;
    &quot;alerts&quot; : [ ],&#xd;
    &quot;claims&quot; : [ ],&#xd;
    &quot;collection&quot; : false,&#xd;
    &quot;contributors&quot; : [ {&#xd;
      &quot;contributor&quot; : &quot;Garke-Rothbart, Thomas.&quot;,&#xd;
      &quot;contributorNameTypeId&quot; : &quot;35b01201-597f-4938-a0d1-110245ba9d67&quot;&#xd;
    } ],&#xd;
    &quot;cost&quot; : {&#xd;
      &quot;listUnitPriceElectronic&quot; : 1.0,&#xd;
      &quot;currency&quot; : &quot;USD&quot;,&#xd;
      &quot;discountType&quot; : &quot;percentage&quot;,&#xd;
      &quot;quantityElectronic&quot; : 1,&#xd;
      &quot;poLineEstimatedPrice&quot; : 1.0&#xd;
    },&#xd;
    &quot;details&quot; : {&#xd;
      &quot;productIds&quot; : [ {&#xd;
        &quot;productId&quot; : &quot;9783598249068&quot;,&#xd;
        &quot;productIdType&quot; : &quot;59378436-9645-4add-b05f-6afc69bdc8d0&quot;,&#xd;
        &quot;qualifier&quot; : &quot;&quot;&#xd;
      } ]&#xd;
    },&#xd;
    &quot;eresource&quot; : {&#xd;
      &quot;activated&quot; : false,&#xd;
      &quot;createInventory&quot; : &quot;Instance, Holding, Item&quot;,&#xd;
      &quot;trial&quot; : false,&#xd;
      &quot;accessProvider&quot; : &quot;da29ee41-727a-4372-9472-7818c948f8c7&quot;,&#xd;
      &quot;materialType&quot; : &quot;025ba2c5-5e96-4667-a677-8186463aee69&quot;&#xd;
    },&#xd;
    &quot;fundDistribution&quot; : [ ],&#xd;
    &quot;isPackage&quot; : false,&#xd;
    &quot;locations&quot; : [ {&#xd;
      &quot;holdingId&quot; : &quot;68962727-43e9-497d-bf74-08af4e3e7643&quot;,&#xd;
      &quot;quantity&quot; : 1,&#xd;
      &quot;quantityElectronic&quot; : 1&#xd;
    } ],&#xd;
    &quot;orderFormat&quot; : &quot;Electronic Resource&quot;,&#xd;
    &quot;paymentStatus&quot; : &quot;Awaiting Payment&quot;,&#xd;
    &#xd;
    &quot;publicationDate&quot; : &quot;2008&quot;,&#xd;
    &quot;publisher&quot; : &quot;Saur&quot;,&#xd;
  &#xd;
    &quot;receiptStatus&quot; : &quot;Awaiting Receipt&quot;,&#xd;
    &quot;reportingCodes&quot; : [ ],&#xd;
    &quot;rush&quot; : false,&#xd;
    &quot;source&quot; : &quot;User&quot;,&#xd;
    &quot;titleOrPackage&quot; : &quot;\&quot;--für unseren Betrieb lebensnotwendig--\&quot; :Georg von Holtzbrinck als Verlagsunternehmer im Dritten Reich /Thomas Garke-Rothbart.&quot;,&#xd;
    &quot;vendorDetail&quot; : {&#xd;
      &quot;instructions&quot; : &quot;&quot;,&#xd;
      &quot;vendorAccount&quot; : &quot;111111&quot;,&#xd;
      &quot;referenceNumbers&quot; : [ ]&#xd;
    }&#xd;
   &#xd;
  } ],&#xd;
  &quot;acqUnitIds&quot; : [ ],&#xd;
 &#xd;
  &quot;needReEncumber&quot; : false&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/orders/composite-orders</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
            <stringProp name="JSONPostProcessor.referenceNames">orderId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="448 - GENERATE COMPOSTIE ORDERS (PTF) AmWater4" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${OrdersCount}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable" enabled="true">
          <stringProp name="maximumValue">15</stringProp>
          <stringProp name="minimumValue">1</stringProp>
          <stringProp name="outputFormat"></stringProp>
          <boolProp name="perThread">false</boolProp>
          <stringProp name="randomSeed"></stringProp>
          <stringProp name="variableName">randVal</stringProp>
        </RandomVariableConfig>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">x-okapi-token</stringProp>
              <stringProp name="Header.value">${X-Okapi-Token-Header}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Composite Order" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &#xd;
  &quot;approved&quot; : true,&#xd;
  &quot;approvedById&quot; : &quot;9eb67301-6f6e-468f-9b1a-6134dc39a684&quot;,&#xd;
  &quot;approvalDate&quot; : &quot;${OrderDate}T${OrderTime}.000+00:00&quot;,&#xd;
  &quot;dateOrdered&quot; : &quot;${OrderDate}T${OrderTime}.000+00:00&quot;,&#xd;
  &quot;notes&quot; : [ ],&#xd;
  &#xd;
  &quot;orderType&quot; : &quot;Ongoing&quot;,&#xd;
  &quot;reEncumber&quot; : true,&#xd;
  &quot;ongoing&quot; : {&#xd;
    &quot;isSubscription&quot; : false,&#xd;
    &quot;manualRenewal&quot; : false&#xd;
  },&#xd;
  &quot;totalEstimatedPrice&quot; : 1.0,&#xd;
  &quot;totalEncumbered&quot; : 1.0,&#xd;
  &quot;totalExpended&quot; : 0.0,&#xd;
  &quot;totalItems&quot; : 1,&#xd;
  &quot;vendor&quot; : &quot;a58a5dcc-7e60-492f-b795-7a791c0970fe&quot;,&#xd;
  &quot;workflowStatus&quot; : &quot;Open&quot;,&#xd;
  &quot;compositePoLines&quot; : [ {&#xd;
   &#xd;
    &quot;edition&quot; : &quot;&quot;,&#xd;
    &quot;checkinItems&quot; : false,&#xd;
    &quot;instanceId&quot; : &quot;8c8e9757-6a0f-4ae1-8c0d-c55db8b0c4ae&quot;,&#xd;
    &quot;acquisitionMethod&quot; : &quot;df26d81b-9d63-4ff8-bf41-49bf75cfa70e&quot;,&#xd;
    &quot;automaticExport&quot; : true,&#xd;
    &quot;alerts&quot; : [ ],&#xd;
    &quot;claims&quot; : [ ],&#xd;
    &quot;collection&quot; : false,&#xd;
    &quot;contributors&quot; : [ {&#xd;
      &quot;contributor&quot; : &quot;Sibold, Noëmi, 1972-&quot;,&#xd;
      &quot;contributorNameTypeId&quot; : &quot;35b01201-597f-4938-a0d1-110245ba9d67&quot;&#xd;
    } ],&#xd;
    &quot;cost&quot; : {&#xd;
      &quot;listUnitPrice&quot; : 1.0,&#xd;
      &quot;currency&quot; : &quot;USD&quot;,&#xd;
      &quot;discountType&quot; : &quot;percentage&quot;,&#xd;
      &quot;quantityPhysical&quot; : 1,&#xd;
      &quot;poLineEstimatedPrice&quot; : 1.0&#xd;
    },&#xd;
    &quot;details&quot; : {&#xd;
      &quot;productIds&quot; : [ {&#xd;
        &quot;productId&quot; : &quot;9783858427014&quot;,&#xd;
        &quot;productIdType&quot; : &quot;59378436-9645-4add-b05f-6afc69bdc8d0&quot;,&#xd;
        &quot;qualifier&quot; : &quot;(hd. bd.)&quot;&#xd;
      } ]&#xd;
    },&#xd;
    &quot;fundDistribution&quot; : [ {&#xd;
      &quot;code&quot; : &quot;AFRICAHIST&quot;,&#xd;
      &quot;encumbrance&quot; : &quot;6a027f3c-2bc6-433d-af59-dc1b96968422&quot;,&#xd;
      &quot;fundId&quot; : &quot;7fbd5d84-62d1-44c6-9c45-6cb173998bbd&quot;,&#xd;
      &quot;expenseClassId&quot; : &quot;1bcc3247-99bf-4dca-9b0f-7bc51a2998c2&quot;,&#xd;
      &quot;distributionType&quot; : &quot;percentage&quot;,&#xd;
      &quot;value&quot; : 100.0&#xd;
    } ],&#xd;
    &quot;isPackage&quot; : false,&#xd;
    &quot;locations&quot; : [ {&#xd;
      &quot;holdingId&quot; : &quot;dacea0f7-d573-4660-a853-bf13cda1bb80&quot;,&#xd;
      &quot;quantity&quot; : 1,&#xd;
      &quot;quantityPhysical&quot; : 1&#xd;
    } ],&#xd;
    &quot;orderFormat&quot; : &quot;Physical Resource&quot;,&#xd;
    &quot;paymentStatus&quot; : &quot;Ongoing&quot;,&#xd;
    &quot;physical&quot; : {&#xd;
      &quot;createInventory&quot; : &quot;Instance, Holding&quot;,&#xd;
      &quot;materialType&quot; : &quot;025ba2c5-5e96-4667-a677-8186463aee69&quot;,&#xd;
      &quot;materialSupplier&quot; : &quot;da29ee41-727a-4372-9472-7818c948f8c7&quot;,&#xd;
      &quot;volumes&quot; : [ ]&#xd;
    },&#xd;
   &#xd;
    &quot;publicationDate&quot; : &quot;2002&quot;,&#xd;
    &quot;publisher&quot; : &quot;Pendo&quot;,&#xd;
   &#xd;
    &quot;receiptStatus&quot; : &quot;Ongoing&quot;,&#xd;
    &quot;reportingCodes&quot; : [ ],&#xd;
    &quot;rush&quot; : false,&#xd;
    &quot;source&quot; : &quot;User&quot;,&#xd;
    &quot;titleOrPackage&quot; : &quot;\&quot;- mit den Emigranten auf Gedeih und Verderb verbunden.\&quot; :die Flüchtlingshilfe der Israelitischen Gemeinde Basel in der Zeit des Nationalsozialismus /Noemi Sibold.&quot;,&#xd;
    &quot;vendorDetail&quot; : {&#xd;
      &quot;instructions&quot; : &quot;&quot;,&#xd;
      &quot;vendorAccount&quot; : &quot;22222&quot;,&#xd;
      &quot;referenceNumbers&quot; : [ ]&#xd;
    }&#xd;
   &#xd;
  } ],&#xd;
  &quot;acqUnitIds&quot; : [ ],&#xd;
 &#xd;
  &quot;needReEncumber&quot; : false&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/orders/composite-orders</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
            <stringProp name="JSONPostProcessor.referenceNames">orderId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="enable mod-data-export-spring" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">X-Okapi-Token</stringProp>
              <stringProp name="Header.value">${X-Okapi-Token-Header}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="disable_mod_data_export_spring" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
    {&#xd;
        &quot;id&quot; : &quot;mod-data-export-spring-1.4.4&quot;,&#xd;
        &quot;action&quot; : &quot;disable&quot;&#xd;
    }&#xd;
]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/_/proxy/tenants/fs09000000/install</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
            <stringProp name="JSONPostProcessor.referenceNames">orderId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="enable_mod_data_export_spring" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
    {&#xd;
        &quot;id&quot; : &quot;mod-data-export-spring-1.4.4&quot;,&#xd;
        &quot;action&quot; : &quot;enable&quot;&#xd;
    }&#xd;
]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/_/proxy/tenants/fs09000000/install</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
            <stringProp name="JSONPostProcessor.referenceNames">orderId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
